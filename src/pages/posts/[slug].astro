---
import { CollectionEntry, getCollection } from "astro:content";
import createSlug from "../../lib/createSlug";
import ContentLayout from "../../Layouts/ContentLayout.astro";
import Post from "../../Components/post.astro";
import PostPage from "../../Components/PostPage.astro";
import BaseLayout from "../../Layouts/BaseLayout.astro";

interface PostByPage {
  params: {
    slug: string;
  };
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", (blog) => !blog.data.draft);

  const postPages = posts.map((post) => ({
    params: { slug: createSlug(post.data.title) },
    props: { post },
  }));

  const totalPages = Math.ceil(posts.length / 3);
  let postsByPage: PostByPage[] = [];
  for (let i = 2; i <= totalPages; i++) {
    const obj = {
      params: { slug: String(i) },
    };
    postsByPage.push(obj);
  }
  return [...postPages, ...postsByPage];
}

export interface prop {
  post: CollectionEntry<"blog">;
}

const { slug } = Astro.params;
const { post } = Astro.props;
---

{
  post ? (
    <ContentLayout>
      <Post post={post} />
    </ContentLayout>
  ) : (
    <BaseLayout>
      <h1 class="text-3xl font-bold h-full">Posts</h1>
      <hr class="h-[2px] bg-black/60 m-auto my-4" />
      <PostPage pageNum={slug} />
    </BaseLayout>
  )
}
